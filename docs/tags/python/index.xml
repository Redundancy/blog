<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on The Nexus</title>
    <link>http://the-nexus.co.uk/tags/python/</link>
    <description>Recent content in Python on The Nexus</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Apr 2016 14:46:39 +0000</lastBuildDate>
    
	<atom:link href="http://the-nexus.co.uk/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Standardized Python installs</title>
      <link>http://the-nexus.co.uk/post/standardizedpython/</link>
      <pubDate>Sat, 23 Apr 2016 14:46:39 +0000</pubDate>
      
      <guid>http://the-nexus.co.uk/post/standardizedpython/</guid>
      <description>Standardized Python installs Virtualenv for Python is wonderful, and you should use it.
Our path to using it however, was rather rocky: working primarily on Windows, we were for quite some time victims of the Python community’s focus on Pip (and insistence on compiling everything during install).
Working on Windows, with a large number of non-technical users, the idea of trying to get your tools to compile on an artists’ machine should really scare you (never-mind the lack of testing / support and particular versions of visual studio that had to exist).</description>
    </item>
    
    <item>
      <title>File Static Data</title>
      <link>http://the-nexus.co.uk/post/filestaticdata/</link>
      <pubDate>Sat, 02 Apr 2016 14:46:39 +0000</pubDate>
      
      <guid>http://the-nexus.co.uk/post/filestaticdata/</guid>
      <description>Eve Online started out life early on with the “Database”. Because the DB existed already and was relatively convenient, we put data into it. Later, we realized that a lot of data was stuff that our game designers authored (like solar systems and their contents) that we called “static data”, and a clever system was created for versioning this data with revisions at a row level. It didn’t seem unreasonable at the time, and the waterfall mechanics of our release process matched pretty closely with the mechanisms in the database versioning system.</description>
    </item>
    
  </channel>
</rss>